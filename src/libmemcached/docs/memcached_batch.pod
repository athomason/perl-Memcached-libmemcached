=head1 NAME

memcached_batch_get, memcached_batch_get_by_key, memcached_batch_get_by_hash - Incrementally construct a multiget request

=head1 LIBRARY

C Client Library for memcached (libmemcached, -lmemcached)

=head1 SYNOPSIS

  #include <memcached.h>

  memcached_batch_st *
  memcached_batch_create(memcached_st *ptr, memcached_batch_st *batch);

  memcached_batch_st *
  memcached_batch_create_sized(memcached_st *ptr, memcached_batch_st *batch, size_t size);

  memcached_batch_get(memcached_batch_st *ptr,
                      const char* key, size_t key_length);

  memcached_batch_get_by_key(memcached_batch_st *ptr,
                             const char* key, size_t key_length,
                             const char* master_key, size_t master_key_length);

  memcached_batch_get_by_hash(memcached_batch_st *ptr,
                              const char* key, size_t key_length,
                              unsigned int hash);

  memcached_return
  memcached_mget_batch(memcached_st *ptr, memcached_batch_st *batch)

=head1 DESCRIPTION

memcached_batch_create() returns a memcached_batch_st structure which should be
populated with heterogeneous keys to be fetched in a single multiget request.
memcached_batch_create_sized() works the same but preallocates for the given
number of keys.

memcached_batch_get() adds a key (in the manner of memcached_get()) to a
memcached_batch_st request. The server to query for the key is determined by
the configured hash function for the controlling memcached_st object.

memcached_batch_get_by_key() adds a key with a server-specifying master key (in
the manner of memcached_get_by_key()) to a memcached_batch_st request.

memcached_batch_get_by_hash() adds a key with a pre-computed server-specifying
master to a memcached_batch_st request. This function should only be preferred
over memcached_batch_get_by_key if multiple keys will be added with the same
master key, to thereby avoid recomputing the integer hash of the master key.
Generally this value should be computed using memcached_generate_hash() to
match the corresponding set_by_key.

memcached_mget_batch() dispatches the multiget request for all keys added to
the memcached_batch_st structure. As with the memcached_mget() family,
memcached_fetch() or equivalents must be used to retrieve the cached values.
All caveats of memcached_mget apply to memcached_mget_batch().

=head1 RETURN

memcached_batch_create() returns a pointer to an initialized memcached_batch_st
structure, which may be recycled with memcached_batch_reset(), and must be
freed with memcached_batch_free().

memcached_batch_get*() have no return value.

memcached_mget_batch() returns the same as memcached_mget().

=head1 HOME

To find out more information please check:
L<http://tangent.org/552/libmemcached.html>

=head1 AUTHOR

Adam Thomason, E<lt>ad@mthomason.netE<gt>

=head1 SEE ALSO

memcached(1) libmemcached(3)

=cut
